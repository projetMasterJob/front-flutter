name: Flutter CI/CD

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  analyze-and-test:
    name: Analyse et Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'
          cache: true
      - name: Install dependencies
        run: flutter pub get
      - name: Verify dependencies compatibility
        run: flutter doctor -v
      - name: Analyze
        run: flutter analyze --no-fatal-infos || true
      - name: Run unit tests
        run: flutter test || true

  bump-version:
    runs-on: ubuntu-latest
    needs: analyze-and-test
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      description: ${{ steps.commitmsg.outputs.description }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Installer Python (pour le script d'incrémentation)
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Récupérer le dernier message de commit
        id: commitmsg
        run: |
          MSG=$(git log -1 --pretty=%B | tr -d '\r')
          TYPE=$(echo "$MSG" | awk '{print $1}')
          if [[ "$TYPE" != "patch" && "$TYPE" != "minor" && "$TYPE" != "major" ]]; then
            TYPE="patch"
            DESC="$MSG"
          else
            DESC=$(echo "$MSG" | cut -d' ' -f2-)
          fi
          echo "type=$TYPE" >> $GITHUB_OUTPUT
          echo "description=$DESC" >> $GITHUB_OUTPUT
      - name: Incrémenter la version dans pubspec.yaml
        id: bump
        run: python3 bump_version.py
        env:
          TYPE_BUMP: ${{ steps.commitmsg.outputs.type }}
      - name: Récupérer la nouvelle version
        id: get_version
        run: |
          VERSION=$(cat new_version.txt)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Mettre à jour le journal de version
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          DESC="${{ steps.commitmsg.outputs.description }}"
          FICHIER="journal_version.txt"
          if [ ! -f "$FICHIER" ]; then touch "$FICHIER"; fi
          TMPFILE=$(mktemp)
          echo "Version $VERSION" > $TMPFILE
          echo "Description : $DESC" >> $TMPFILE
          echo "" >> $TMPFILE
          cat "$FICHIER" >> $TMPFILE
          mv $TMPFILE "$FICHIER"
      - name: Commit et push la nouvelle version et le journal
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add pubspec.yaml journal_version.txt
          git commit -m "chore: bump version et journal [ci skip]"
          git push

  build-apk:
    name: Build APK Android
    runs-on: ubuntu-latest
    needs: bump-version
    steps:
      - uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'
          cache: true
      - name: Clean Flutter cache
        run: flutter clean
      - name: Clear pub cache
        run: flutter pub cache clean --force
      - name: Install dependencies
        run: flutter pub get
      - name: Debug and ensure gradle.properties
        run: |
          cat android/gradle.properties
          grep -q "flutter.compileSdkVersion" android/gradle.properties || echo "flutter.compileSdkVersion=35" >> android/gradle.properties
          grep -q "flutter.targetSdkVersion" android/gradle.properties || echo "flutter.targetSdkVersion=34" >> android/gradle.properties
          grep -q "flutter.minSdkVersion" android/gradle.properties || echo "flutter.minSdkVersion=21" >> android/gradle.properties
          grep -q "flutter.ndkVersion" android/gradle.properties || echo "flutter.ndkVersion=27.0.12077973" >> android/gradle.properties  
          grep -q "flutter.versionCode" android/gradle.properties || echo "flutter.versionCode=1" >> android/gradle.properties
          grep -q "flutter.versionName" android/gradle.properties || echo "flutter.versionName=1.0" >> android/gradle.properties
          cat android/gradle.properties
      - name: Build APK
        run: flutter build apk --release
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk

  deploy-firebase:
    name: Déploiement Firebase
    runs-on: ubuntu-latest
    needs: [build-apk, bump-version]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/
      - name: Setup Node.js for Firebase CLI
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
      - name: Create service account file
        run: echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' > service-account.json
      - name: Upload to Firebase App Distribution
        env:
          GOOGLE_APPLICATION_CREDENTIALS: service-account.json
        run: |
          firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk \
            --app ${{ secrets.FIREBASE_APP_ID }} \
            --groups testers \
            --release-notes "v${{ needs.bump-version.outputs.version }} - ${{ needs.bump-version.outputs.description }}"